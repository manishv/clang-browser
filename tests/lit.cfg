# -*- python -*-

import os
import re


# Name of this test suite
config.name = 'clang-browser'

# All unit tests are considered at shell scripts
config.test_format = lit.formats.ShTest()

config.suffixes = [ '.m' ]

# directory where test sources are located
config.test_source_root = os.path.dirname(__file__)
config.target_triple = ""

config.test_util_dir=config.test_source_root+"/utils"
config.cbrowse_exec_dir="/data/work/clang-browser/bin"
config.cbrowse_python_src_dir="/data/work/clang-browser/src/python"
config.clang_lib_dir="/data/work/LLVM/llvm-dbg/lib"
config.clang_python_lib_dir="/data/work/LLVM/llvm-src/tools/clang/bindings/python"

test_util_dir= getattr(config, 'test_util_dir', None)
if not test_util_dir:
    lit.fatal('No tool utils dir set!')
path = os.path.pathsep.join((test_util_dir, config.environment['PATH']))
config.environment['PATH']=path

cbrowse_exec_dir=getattr(config, 'cbrowse_exec_dir', None)
if not cbrowse_exec_dir:
    lit.fatal('No executable dir set!')
path = os.path.pathsep.join((cbrowse_exec_dir, config.environment['PATH']))
config.environment['PATH']=path

clang_lib_dir=getattr(config, 'clang_lib_dir', None)
if not clang_lib_dir:
    lit.fatal('Clang library dir not set')
ldpath= os.path.pathsep.join((clang_lib_dir, 
                              config.environment['LD_LIBRARY_PATH']))
config.environment['LD_LIBRARY_PATH']=ldpath

clang_python_lib_dir=getattr(config, 'clang_python_lib_dir', None)
if 'PYTHONPATH' in os.environ:
    config.environment['PYTHONPATH']=os.environ['PYTHONPATH']
else:
    config.environment['PYTHONPATH']=''

if not clang_python_lib_dir:
    lit.fatal('Clang python bindings dir not set')
pythonpath = os.path.pathsep.join((clang_python_lib_dir, 
                                   config.environment['PYTHONPATH']))
config.environment['PYTHONPATH']=pythonpath

cbrowse_python_src_dir=getattr(config, 'cbrowse_python_src_dir', None)
if not cbrowse_python_src_dir:
    lit.fatal('Clang python bindings dir not set')
pythonpath = os.path.pathsep.join((cbrowse_python_src_dir, 
                                   config.environment['PYTHONPATH']))
config.environment['PYTHONPATH']=pythonpath
